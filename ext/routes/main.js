const express = require("express"), app = express(), path = require("path"), router = express.Router(), users = require(path.join(__dirname, "..", "schema", "users")), posts = require(path.join(__dirname, "..", "schema", "posts")), cookie_parser = require("cookie-parser"), mongoose = require("mongoose"); app.use(cookie_parser()); const cookie_name = "cookie", meta = { name: "MongoXpress" }, main_layout = path.join(__dirname, "..", "..", "views", "layouts", "main.ejs"), user_layout = path.join(__dirname, "..", "..", "views", "layouts", "users.ejs"); router.get("/", async (a, b) => { let c = 6, d = a.query.page || 1; try { const e = await posts.find().sort({ date: -1 }).skip(c * d - c).limit(c).exec(), f = await posts.countDocuments(), g = parseInt(d) + 1, h = g <= Math.ceil(f / c), i = parseInt(d) - 1, j = g >= Math.ceil(f / c); a.cookies[cookie_name] ? a.cookies[cookie_name] && b.render(path.join(__dirname, "..", "..", "views", "index.ejs"), { meta, data: e, current: d, nextpage: h ? g : null, previous_page: j ? i : null, layout: user_layout }) : b.render(path.join(__dirname, "..", "..", "views", "index.ejs"), { meta, data: e, current: d, nextpage: h ? g : null, previous_page: j ? i : null, layout: main_layout }) } catch (a) { } }), router.post("/search", async (a, b) => { try { let c = a.body.search_inp; const d = c.replace(/[^a-zA-Z0-9]/g, ""), e = await posts.find({ $or: [{ title: { $regex: new RegExp(d, "i") } }] }); a.cookies[cookie_name] ? a.cookies[cookie_name] && b.render("search", { meta, search_data: e, layout: user_layout }) : b.render("search", { meta, search_data: e, layout: main_layout }) } catch (a) { } }), router.get("/post/:id", async (a, b) => { try { let c = a.params.id; const d = await posts.findById({ _id: c }); a.cookies[cookie_name] ? a.cookies[cookie_name] && b.render("post", { meta, post_data: d, layout: user_layout }) : b.render("post", { meta, post_data: d, layout: main_layout }) } catch (a) { } }), module.exports = router;