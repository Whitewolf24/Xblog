require("dotenv").config(); const mongoose = require("mongoose"), express = require("express"), expressui = require("express-ejs-layouts"), override = require("method-override"), compression = require("compression"), serv = express(), port = process.env.port || 3000, session = require("express-session"), cookie = require("cookie-parser"), mongostore = require("connect-mongo"), helmet = require("helmet"); serv.use(function (a, b, c) { b.setHeader("Content-Security-Policy", "script-src 'self' 'unsafe-inline' localhost"), c() }), serv.use(compression()), serv.use(helmet.contentSecurityPolicy({ directives: { "script-src": ["'self'", "'unsafe-inline'"] } })), serv.use(express.urlencoded({ extended: !0 })), serv.use(express.json()), serv.use(override("_method")), serv.use(cookie()), serv.use(session({ secret: "ntolmadkia", resave: !1, saveUninitialized: !1, store: mongostore.create({ mongoUrl: process.env.MONGO }), cookie: { maxAge: 43200000 } })), "undefined" != typeof window && window.addEventListener("beforeunload", function () { serv.session.destroy() }), serv.use(express.static("public")), serv.use(expressui), serv.set("view engine", "ejs"), serv.set("views", "views"), serv.set("layout", "./layouts/main"), serv.use("/", require("./ext/routes/main.js")), serv.use("/", require("./ext/routes/users.js")); const connectDB = async () => { try { mongoose.set("strictQuery", !1), await mongoose.connect(process.env.MONGO) } catch (a) { } }; connectDB(), serv.listen(port);